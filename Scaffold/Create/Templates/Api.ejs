 <%- importStr %>
 <%- exportStr %>

		async test() {
			let res = await axios.get(`${routePrefix}/test`).catch(err => console.log(err))
			return res.data;
		},
		async getOne(id) {
			let res = await axios.get(`${routePrefix}/${id}`).catch(err => console.log(err))
			return res.data;
		},
		async getAll() {
			let res = await axios.get(`${routePrefix}`).catch(err => console.log(err))
			return res.data;
		},
		async count() {
			let res = await axios.get(`${routePrefix}/count/all`).catch(err => console.log(err))
			return res.data;
		},
		async create(data) {
			let res = await axios.post(`${routePrefix}`, data).catch(err => console.log(err))
			return res.data
		},

		async update(id, data) {
			let res = await axios.put(`${routePrefix}/${id}`,  data).catch(err => console.log(err))
			return res.data
		},

		async destroy(id) {
			let res = await axios.delete(`${routePrefix}/${id}`).catch(err => console.log(err))
			return res.data;
		}, 
		
<% if (currentModel) { %>
	<% for (let model of currentModel.hasMany) { %>
		<% let lc_model = LowerCaseFirstLetter(model) %>
		<% let functionName = `${name}With${model}` %>

		async get<%= functionName %>(id) {
			let res = await axios.get(`${routePrefix}/${id}/<%= lc_model %>`).catch(err => console.log(err))
			return res.data;
		},

		async create<%= functionName %>(data) {
			let res = await axios.post(`${routePrefix}/<%= lc_model %>`, data).catch(err => console.log(err))
			return res.data;
		},

		async get<%= model %>WithAllAssociations(id) {
			let res = await axios.get(`${routePrefix}/${id}/<%= lc_model %>/all/associations`).catch(err => console.log(err))
			return res.data;
		},


		async getWithAllAssociations() {
			let res = await axios.get(`${routePrefix}/all/associations`).catch(err => console.log(err))
			return res.data;
		},

	<% } %>
<% } %>



}
	